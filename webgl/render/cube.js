resourceLoader.load('webgl/render/mesh.js');

class Cube extends Mesh
{
    constructor()
    {
        var vertices =
        {
            data:
            [
                -1.000000, -1.000000, 1.000000,
                1.000000, -1.000000, 1.000000,
                -1.000000, 1.000000, 1.000000,
                1.000000, 1.000000, 1.000000,
                -1.000000, 1.000000, -1.000000,
                1.000000, 1.000000, -1.000000,
                -1.000000, -1.000000, -1.000000,
                1.000000, -1.000000, -1.000000,

                // Bottom side
                -1.000000, -1.000000, 1.000000,
                1.000000, -1.000000, 1.000000,
                -1.000000, -1.000000, -1.000000,
                1.000000, -1.000000, -1.000000,

                // Top side
                -1.000000, 1.000000, 1.000000,
                1.000000, 1.000000, 1.000000,
                -1.000000, 1.000000, -1.000000,
                1.000000, 1.000000, -1.000000
            ]
        , size: 3};


        var textureCoordinates =
        [
            0.000000, 0.000000,
            1.000000, 0.000000,
            0.000000, 1.000000,
            1.000000, 1.000000,
            1.000000, 1.000000,
            0.000000, 1.000000,
            1.000000, 0.000000,
            0.000000, 0.000000,

            1.000000, 1.000000,
            0.000000, 1.000000,
            1.000000, 0.000000,
            0.000000, 0.000000,

            0.000000, 0.000000,
            1.000000, 0.000000,
            0.000000, 1.000000,
            1.000000, 1.000000,
        ];

        var normals =
        [
            (new Vector3(-1.000000, -1.000000, 1.000000)).normalized(),
            (new Vector3(1.000000, -1.000000, 1.000000)).normalized(),
            (new Vector3(-1.000000, 1.000000, 1.000000)).normalized(),
            (new Vector3(1.000000, 1.000000, 1.000000)).normalized(),
            (new Vector3(-1.000000, 1.000000, -1.000000)).normalized(),
            (new Vector3(1.000000, 1.000000, -1.000000)).normalized(),
            (new Vector3(-1.000000, -1.000000, -1.000000)).normalized(),
            (new Vector3(1.000000, -1.000000, -1.00000)).normalized(),
            (new Vector3(-1.000000, -1.000000, 1.000000)).normalized(),
            (new Vector3(1.000000, -1.000000, 1.000000)).normalized(),
            (new Vector3(-1.000000, -1.000000, -1.000000)).normalized(),
            (new Vector3(1.000000, -1.000000, -1.000000)).normalized(),
            (new Vector3(-1.000000, 1.000000, 1.000000)).normalized(),
            (new Vector3(1.000000, 1.000000, 1.000000)).normalized(),
            (new Vector3(-1.000000, 1.000000, -1.000000)).normalized(),
            (new Vector3(1.000000, 1.000000, -1.00000)).normalized()
        ];

        normals = Array.flatten(normals);

        var indices =
        [
            6, 0, 2,
            2, 4, 6,

            5, 3, 1,
            1, 7, 5,

            3, 2, 0,
            0, 1, 3,

            7, 6, 4,
            4, 5, 7,

            8, 10, 11,
            11, 9, 8,

            15, 14, 12,
            15, 12, 13,
        ];
        super(vertices, indices, normals, textureCoordinates);
    }
}

